
name: Node.js CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'bts/**'
      - '.github/workflows/node.js.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'bts/**'
      - '.github/workflows/node.js.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
      fail-fast: false # Don't cancel other jobs if one fails

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          bts/package-lock.json
          bts/src/backend/package-lock.json    
    # Install and test frontend
    - name: Install frontend dependencies
      working-directory: ./bts
      run: npm ci
    
    - name: Build frontend
      working-directory: ./bts
      run: npm run build --if-present
      env:
        CI: false # Treat warnings as warnings, not errors
      - name: Test frontend
      working-directory: ./bts
      run: npm run test:ci --if-present
      
    # Install and test backend
    - name: Install backend dependencies
      working-directory: ./bts/src/backend
      run: npm ci
      - name: Test backend
      working-directory: ./bts/src/backend
      run: npm test --if-present
      
    # Optional: Run integration tests
    - name: Start backend server (background)
      working-directory: ./bts/src/backend
      run: |
        npm start &
        echo $! > server.pid
        sleep 5  # Give server time to start
    
    - name: Check backend health
      run: |
        curl -f http://localhost:3001/api/bugs || echo "Backend health check failed, but continuing..."
        
    - name: Stop backend server
      if: always()
      working-directory: ./bts/src/backend
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
          rm server.pid
        fi
        pkill -f "node server.js" || true
